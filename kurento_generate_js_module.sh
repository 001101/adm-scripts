#!/bin/bash -x

echo "##################### EXECUTE: kurento_generate_js_module #####################"

rm -rf build
mkdir build && cd build
cmake .. -DGENERATE_JS_CLIENT_PROJECT=TRUE -DDISABLE_LIBRARIES_GENERATION=TRUE || {
  echo "[kurento_generate_js_module] ERROR: Command failed: cmake"
  exit 1
}

[ -d js ] || {
  echo "[kurento_generate_js_module] ERROR: Expected directory doesn't exist: $PWD/js"
  exit 1
}

JS_PROJECT="$(cat js_project_name)-js"
echo "[kurento_generate_js_module] Generated sources: $JS_PROJECT"

kurento_clone_repo.sh "$JS_PROJECT" "$GERRIT_NEWREV" || {
  echo "[kurento_generate_js_module] ERROR: Command failed: kurento_clone_repo $JS_PROJECT $GERRIT_NEWREV"
  exit 1
}

rm -rf "${JS_PROJECT:?}"/*
cp -a js/* "${JS_PROJECT:?}"/

echo "Commit and push changes to repo: $JS_PROJECT"
GIT_COMMIT="$(git rev-parse --short HEAD)"
{
    pushd "$JS_PROJECT"

    git status
    git diff-index --quiet HEAD || {
      git add --all .
      git commit -m "Code autogenerated from Kurento/${KURENTO_PROJECT}@${GIT_COMMIT}"
      git push origin master || {
        echo "ERROR: Command failed: git push ($JS_PROJECT)"
        exit 1
      }
    }

    kurento_check_version.sh true || {
        echo "[kurento_generate_js_module] ERROR: Command failed: kurento_check_version (tagging enabled)"
        exit 1
    }

    popd  # $JS_PROJECT
}
